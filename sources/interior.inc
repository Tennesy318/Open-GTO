/*

	Created: 08.02.2011
	Aurthor: GhostTT
	
	Modified 23.02.2012 by ZiGGi
	
*/

#if defined _interior_included
	#endinput
#endif

#define _interior_included
#pragma library interior


enum iee_Info {
	iee_interior_ID,
	iee_icon_ID,
	Float:iee_enter_X,
	Float:iee_enter_Y,
	Float:iee_enter_Z,
	Float:iee_enter_A,
	Float:iee_exit_X,
	Float:iee_exit_Y,
	Float:iee_exit_Z,
	Float:iee_exit_A,
}

new interior_EnterExits[][iee_Info] = {
{0,-1, 1570.4795,-1337.2932,16.4844, 180.0000,	1548.6724,-1363.7424,326.2183, 270.0000},
{1, 45,-2490.0488,-29.0154,25.6172,90.0000,		203.8098,-50.5994,1001.8047,0.0000},
{1, 6,-2625.9001,208.2365,4.8125,0.0000,		285.3952,-41.5178,1001.5156,0.0000},
{1, 6, 1368.7693,-1279.7759,13.5469,90.0000,	285.3952,-41.5178,1001.5156,0.0000},
{1, 45, 2112.9055,-1211.6233,23.9631,180.0000,	203.8098,-50.5994,1001.8047,0.0000},
{1, 44, 2196.7908,1677.1324,12.3672,90.0000,	2234.0168,1714.3533,1012.3828,180.0000},
{1, 29, 2779.6235,2453.8235,11.0625,180.0000,	203.8098,-50.5994,1001.8047,0.0000},
{2,-1, 2421.5637,-1219.6958,25.5323,0.0000,		1204.8013,-13.5916,1000.9219,0.0000},
{3, 48,-2624.5725,1412.6639,7.0938,180.0000,	-2636.6528,1402.4633,906.4609,0.0000},
{3, 25, 1288.9238,271.1603,19.5547,270.0000,	834.2251,7.4040,1004.1870,90.0000},
{3,-1, 1631.8184,-1172.9304,24.0843,0.0000,		834.2251,7.4040,1004.1870,90.0000},
{3,-1, 2085.1982,2074.0313,11.0547,270.0000,	-100.3775,-24.7286,1000.7188,0.0000},
{3, 30, 2287.0217,2432.0430,10.8203,180.0000,	238.6454,139.0460,1003.0234,0.0000},
{3, 30, 2337.2273,2459.1167,14.9742,180.0000,	288.8200,167.4086,1007.1719,0.0000},
{3, 20, 2412.5461,1123.7743,10.8203,270.0000,	390.3409,173.7717,1008.3828,90.0000}, 
{3,-1, 2543.3179,1025.2427,10.8203,180.0000,	1212.1140,-26.2612,1000.9531,180.0000},
{3, 14, 2826.0435,2407.5281,11.0625,180.0000,	207.0162,-140.2690,1003.5078,0.0000},
{3, 45, 499.5393,-1360.6158,16.3675,0.0000,		207.0162,-140.2690,1003.5078,0.0000},
{1, 6, 2159.4817,943.2319,10.8203,90.0000,		285.3952,-41.5178,1001.5156,0.0000},
{1, 6, 2333.0889,61.5770,26.7058,270.0000,		285.3952,-41.5178,1001.5156,0.0000}, 
{1, 6, 242.8935,-178.4391,1.5822,90.0000,		285.3952,-41.5178,1001.5156,0.0000},
{1, 6, 2539.2190,2083.8953,10.8203,90.0000,		285.3952,-41.5178,1001.5156,0.0000},
{5, 29,-1721.2444,1359.6973,7.1853,90.0000,		372.3875,-133.2606,1001.4922,0.0000},
{5, 29,-1808.4500,945.7524,24.8906,180.0000,	372.3875,-133.2606,1001.4922,0.0000},
{5, 29, 1367.3691,248.3987,19.5669,90.0000,		372.3875,-133.2606,1001.4922,0.0000},
{5, 29, 203.5036,-202.3890,1.5781,180.0000,		372.3875,-133.2606,1001.4922,0.0000},
{5, 29, 2083.3271,2224.4194,11.0234,180.0000,	372.3875,-133.2606,1001.4922,0.0000},
{5, 29, 2105.1870,-1806.5176,13.5547,90.0000,	372.3875,-133.2606,1001.4922,0.0000},
{5, 54, 2229.7434,-1721.4860,13.5635,180.0000,	772.2972,-5.0721,1000.7287,0.0000},
{5, 29, 2332.2661,75.0068,26.6210,270.0000,		372.3875,-133.2606,1001.4922,0.0000},
{5, 29, 2351.8105,2533.3840,10.8203,180.0000,	372.3875,-133.2606,1001.4922,0.0000},
{5, 29, 2638.5471,1849.8080,11.0234,90.0000,	372.3875,-133.2606,1001.4922,0.0000}, 
{5, 29, 2802.7837,2430.5459,11.0625,90.0000,	227.0943,-8.2332,1002.2109,90.0000},
{6, 6,-1508.9017,2610.4512,55.8359,180.0000,	316.4863,-170.0589,999.5938,0.0000},
{6, 6,-2093.4211,-2464.6709,30.6250,270.0000,	296.8983,-111.7475,1001.5156,0.0000},
{6, 36,-2242.1392,128.6178,35.3203,90.0000,		-2240.6382,128.3041,1035.4141,270.0000},
{6, 54,-2270.3320,-156.0104,35.3203,270.0000,	774.1264,-50.1067,1000.5859,0.0000},
{6, 30, 1555.0339,-1675.6987,16.1953,90.0000,	246.7515,62.6663,1003.6406,0.0000},
{6, 36, 1937.4680,2307.2283,10.8203,90.0000,	-27.4186,-57.8725,1003.5469,0.0000},
{6, 36, 2097.5952,2224.4607,11.0234,180.0000,	-27.4186,-57.8725,1003.5469,0.0000},
{6, 36, 2194.6233,1991.0389,12.2969,90.0000,	-27.4186,-57.8725,1003.5469,0.0000},
{6, 36, 2247.7466,2396.4775,10.8203,0.0000,		-27.4186,-57.8725,1003.5469,0.0000},
{6, 6, 2400.5042,-1981.6545,13.5469,0.0000,		296.8983,-111.7475,1001.5156,0.0000},
{6, 36, 2452.4536,2064.8892,10.8203,180.0000,	-27.4186,-57.8725,1003.5469,0.0000},
{6, 30, 627.1440,-571.8030,17.9145,270.0000,	246.7515,62.6663,1003.6406,0.0000},
{7, 54, 1968.7017,2295.6604,16.4559,180.0000,	773.9219,-78.5094,1000.6623,0.0000},
{9, 14,-1213.5768,1830.6093,41.9297,270.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14,-2154.9976,-2460.4131,30.8516,180.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14,-1816.5159,618.3961,35.1740,180.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14,-2671.4182,258.3566,4.6328,0.0000,		364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 172.7902,1176.8433,14.7578,90.0000,		364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 2102.1233,2228.7795,11.0234,270.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 2393.2649,2041.7802,10.8203,0.0000,		364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 2397.8098,-1898.9425,13.5469,0.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 2420.1047,-1508.9398,24.0000,270.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 2638.0955,1671.9607,11.0234,90.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 2838.3821,2407.4861,11.0690,180.0000,	364.7823,-11.3572,1001.8516,0.0000},
{9, 14, 928.5008,-1352.9829,13.3438,90.0000,	364.7823,-11.3572,1001.8516,0.0000},
{10, 10,-1912.2883,828.0991,35.2209,270.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 10,-2336.4890,-166.7664,35.5547,270.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 10,-2356.2266,1008.1021,50.8984,90.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 10, 1158.2136,2072.2249,11.0625,270.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 10, 1199.2291,-918.5574,43.1203,180.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 10, 1872.6147,2071.7510,11.0625,270.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 44, 2019.6924,1007.8068,10.8203,270.0000,	2018.7539,1017.7650,996.8750,90.0000},
{10, 10, 2169.6868,2795.8181,10.8203,270.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 10, 2366.5193,2071.0603,10.8203,90.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 10, 2472.5781,2034.1549,11.0625,90.0000,	363.0454,-74.9226,1001.5078,0.0000},
{10, 5, 423.5569,2536.4775,16.1484,270.0000,	422.1958,2536.4480,10.0000,90.0000},
{10, 10, 810.9251,-1616.1669,13.5469,270.0000,	363.0454,-74.9226,1001.5078,0.0000},
{11, 49, 2309.6880,-1643.8400,14.8270,90.0000,	501.9147,-68.1193,998.7578,180.0000},
{11, 49, 2441.1147,2065.0554,10.8203,180.0000,	501.9147,-68.1193,998.7578,180.0000},
{12, 44, 1658.4637,2250.4370,11.0701,0.0000,	1133.0773,-15.5890,1000.6797,0.0000},
{15, 45,-2374.1487,910.2123,45.4326,90.0000,	207.6846,-110.9347,1005.1328,0.0000},
{15, 45, 2102.5891,2257.3999,11.0234,270.0000,	207.6846,-110.9347,1005.1328,0.0000},
{15,-1, 2232.9968,-1159.7925,25.8906,90.0000,	2214.7024,-1150.5114,1025.7969,270.0000},
{15, 45, 2244.4548,-1665.2813,15.4766,0.0000,	207.6846,-110.9347,1005.1328,0.0000},
{17,-1,-595.1345,2017.8734,60.5391,0.0000,		-959.6079,1955.7019,9.0000,180.0000},
{18, 45,-1882.5308,866.2903,35.1719,90.0000,	161.3583,-96.5063,1001.8047,0.0000},
{18, 45, 2090.4858,2224.3142,11.0234,180.0000,	161.3583,-96.5063,1001.8047,0.0000},
{18, 36, 2546.5791,1972.1726,10.8203,18.0000,	-30.9799,-91.6893,1003.5469,0.0000},
{18, 36, 2884.8823,2453.7986,11.0690,180.0000,	-30.9799,-91.6893,1003.5469,0.0000},
{7, 33, 2695.5405, -1704.5406, 11.8438, 0.0000,	-1405.987200,-261.408000, 1043.656300, 0.000000}, // стадион в гантоне
{15, 33,-2110.1619,-445.7126,38.7344,264.4261,	-1443.709800, 930.071700, 1036.481600, 0.000000}, // стадион во втором городе амерфут
{14, 33,-2171.9771,252.0907,35.3382,88.8802,	-1464.7389,1556.3762,1052.5313,183.4590}, // второй стадион во втором городе
{4, 33, 1099.6008, 1601.5157, 12.5469, 0.0000,	-1437.187000,-637.602200, 1048.876500, 0.000000}, // стадион в третьем городе
{1, 50, 1046.1045,-1130.9662, 23.8281, 0.0000,	-794.981400, 489.284700, 1376.195300, 0.000000}, // ресторан либерти сити
{17, 48, 1836.6289,-1682.4927,13.3400,180.0000,	493.3302,-24.3971,1000.6797,0.0000}, // alhambra club
{6, 36, -1561.9888,-2733.4324,48.7435,180.0000,	-27.4186,-57.8725,1003.5469,0.0000},
{18, 36, 1315.4572,-898.0416,39.5781,180.0000,	-30.9799,-91.6893,1003.5469,0.0000},
{18, 36, -553.6256,2593.9050,53.9348,270.0000,	-30.9799,-91.6893,1003.5469,0.0000}, // big 24/7
{18, -1, -89.1717,1378.3308,10.4698,270.0000,	-228.9418,1401.1884,27.7656,270.0000} // lil probe inn
};

stock interior_OnGameModeInit()
{
	DisableInteriorEnterExits();
	for (new i = 0; i < sizeof(interior_EnterExits); i++)
	{
		CreatePickup(19198, 1, interior_EnterExits[i][iee_enter_X], interior_EnterExits[i][iee_enter_Y], interior_EnterExits[i][iee_enter_Z] + 0.5);
		CreatePickupText("Вход", interior_EnterExits[i][iee_enter_X], interior_EnterExits[i][iee_enter_Y], interior_EnterExits[i][iee_enter_Z]);
		
		CreatePickup(19198, 1, interior_EnterExits[i][iee_exit_X], interior_EnterExits[i][iee_exit_Y], interior_EnterExits[i][iee_exit_Z] + 0.2);
		CreatePickupText("Выход", interior_EnterExits[i][iee_exit_X], interior_EnterExits[i][iee_exit_Y], interior_EnterExits[i][iee_exit_Z]);
		
		if (interior_EnterExits[i][iee_icon_ID] != -1)
		{
			CreateStreamMapIcon(interior_EnterExits[i][iee_icon_ID], interior_EnterExits[i][iee_enter_X], interior_EnterExits[i][iee_enter_Y], interior_EnterExits[i][iee_enter_Z]);
		}
	}
	GameMSG("SERVER: Interior module init");
	return 1;
}

stock interior_OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	#pragma unused oldkeys, newkeys
	for (new i = 0; i < sizeof(interior_EnterExits); i++)
	{
		if (GetPlayerVirtualWorld(playerid) != 0) {
			continue;
		}
		if (IsPlayerInRangeOfPoint(playerid, 2, interior_EnterExits[i][iee_exit_X], interior_EnterExits[i][iee_exit_Y], interior_EnterExits[i][iee_exit_Z]))
		{
			new id = GetPVarInt(playerid, "interior_Index");
			SetPlayerInterior(playerid, 0);
			oSetPlayerPos(playerid, interior_EnterExits[id][iee_enter_X], interior_EnterExits[id][iee_enter_Y], interior_EnterExits[id][iee_enter_Z]);
			SetPlayerFacingAngle(playerid, interior_EnterExits[id][iee_enter_A]);
			return 1;
		}
		else if (IsPlayerInRangeOfPoint(playerid, 2, interior_EnterExits[i][iee_enter_X], interior_EnterExits[i][iee_enter_Y], interior_EnterExits[i][iee_enter_Z]+0.25))
		{
			SetPVarInt(playerid, "interior_Index", i);
			SetPlayerInterior(playerid, interior_EnterExits[i][iee_interior_ID]);
			oSetPlayerPos(playerid, interior_EnterExits[i][iee_exit_X], interior_EnterExits[i][iee_exit_Y], interior_EnterExits[i][iee_exit_Z]);
			SetPlayerFacingAngle(playerid, interior_EnterExits[i][iee_exit_A]);
			return 1;
		}
	}
	return 1;
}

stock IsPlayerAtEnterExit(playerid)
{
	for (new i = 0; i < sizeof(interior_EnterExits); i++)
	{
		if (IsPlayerInRangeOfPoint(playerid, 2, interior_EnterExits[i][iee_enter_X], interior_EnterExits[i][iee_enter_Y], interior_EnterExits[i][iee_enter_Z]+0.25)
			|| IsPlayerInRangeOfPoint(playerid, 2, interior_EnterExits[i][iee_exit_X], interior_EnterExits[i][iee_exit_Y], interior_EnterExits[i][iee_exit_Z]))
		{
			return 1;
		}
	}
	return 0;
}
